// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

enum Providers {
  GITHUB
  GOOGLE
  NONE
}

enum ModelType {
  Fading
  PathLoss
  Multipath
  Standard
  Modulation
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  userId   String    @id @default(uuid())
  name     String?
  email    String?   @unique
  password String?
  provider Providers @default(NONE)
  avatar   String    @default("/avatars/default.svg")
}

model Courses {
  courseId    Int        @id @default(autoincrement())
  title       String
  description String
  icon        String
  channelType ModelType?
  chapters    Chapters[]
  dateAdded   DateTime   @default(now())
}

model Quizes {
  quizId             Int        @id @default(autoincrement())
  question           String
  options            String[]
  correctAnswerIndex Int
  explaination       String
  chapters           Chapters[] @relation("QuizChapters")
}

model Chapters {
  chapterId    String      @id @default(uuid())
  name         String
  body         String
  icon         String
  simulationId Int?
  courseId     Int?
  quizes       Quizes[]    @relation("QuizChapters")
  course       Courses?    @relation(fields: [courseId], references: [courseId])
  simulation   Simulation? @relation(fields: [simulationId], references: [simulationId])
  dateAdded    DateTime    @default(now())
}

model Simulation {
  simulationId Int        @id @default(autoincrement())
  name         String
  description  String
  params       String // Parameters of API stored as JSON
  endPoint     String
  Chapters     Chapters[]
}

model EnvironmentScenarios {
  envId        Int    @id @default(autoincrement())
  title        String
  imageUrl     String
  description  String
  envDetailsId String @unique

  Envdetails    EnvironmentDetails   @relation(fields: [envDetailsId], references: [envDetailsId])
  SuggestedEnvs EnvironmentDetails[] @relation("SuggestedEnvs")
}

model EnvironmentDetails {
  envDetailsId String @id @default(uuid())
  body         String
  title        String

  environmentScenario EnvironmentScenarios?
  SuggestedScenarios  EnvironmentScenarios[] @relation("SuggestedEnvs")
}
